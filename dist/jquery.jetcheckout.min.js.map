{"version":3,"sources":["jquery.jetcheckout.js"],"names":["$","window","document","undefined","pluginName","cleanString","value","replace","defaults","requiredSelector","fieldGroupSelector","debug","fieldSelector","pj","selector","pf","success","class","message","pattern","toValidate","creditcard","type","email","name","number","phone","zipcode","onValidateFail","onValidateClear","onValidateSucess","onNext","disableEvent","onUnFinishedForm","onFinishedForm","form","fields","element","field","init","options","this","settings","extend","JetCheckout","prototype","$element","jet","groupSelector","tabIndex","find","attr","show","each","fn","setId","keypressDelay","_this","clearTimeout","timer","setTimeout","$input","callback","ms","keyCode","keypress","e","which","validateField","$this","showNextField","onInputComplete","call","on","val","endOfForm","$field","fieldBehaviour","validate","validateOptions","key","changeProfile","regex","validateCPF","length","fieldClear","id","fieldIsInvalid","test","validacep","fieldIsValid","onValidateInputComplete","isValid","removeClass","error","showErrorMsg","remove","addClass","profile","hide","is","active","showElement","$fieldObject","belongsToProfileSelector","index","$error","required","arguments","fadeIn","complete","$sucess","$incomplete","incomplete","onshowNextField","formStatus","status","$notError","$notSucess","isTheEnd","hasClass","isGroup","$currentElement","validateShowField","parent","$nextElement","next","firstElementChild","data","verifierDigit","S4","reverse","numbers","toString","buffer","mod","CNPJ","BLACKLIST","stripped","cnpj","STRICT_STRIP_REGEX","LOOSE_STRIP_REGEX","modulus","split","reduce","concat","parseInt","format","strip","multiplied","strict","indexOf","substr","cpf","params","map","CPF","html","append","jQuery"],"mappings":"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","file":"jquery.jetcheckout.min.js","sourcesContent":["/**\r\n * JetCheckout Plugin\r\n * Author: Heitor Ramon Ribeiro\r\n * Email: heitor.ramon@gmail.com\r\n * Website: www.heitorramon.com\r\n * Repo: https://github.com/bloodf/jetcheckout\r\n */\r\n;(function ($, window, document, undefined) {\r\n\r\n    \"use strict\";\r\n    const pluginName  = \"jetCheckout\",\r\n          cleanString = (value) => value.replace(/[^\\d]+/g, \"\"),\r\n          defaults    = {\r\n              debug: false,\r\n              fieldSelector: \".field\",\r\n              requiredSelector: \".required\",\r\n              fieldGroupSelector: \".fields\",\r\n              activeClass: \"ativo\",\r\n              profile: {\r\n                  active: \"\",\r\n                  selector: {\r\n                      pf: \".pessoa.fisica\",\r\n                      pj: \".pessoa.juridica\"\r\n                  }\r\n              },\r\n              disabled: {\r\n                  class: \"disabled\"\r\n              },\r\n              success: {\r\n                  class: \"success\",\r\n                  message: {\r\n                      class: \"\"\r\n                  }\r\n              },\r\n              warning: {\r\n                  class: \"warning\",\r\n                  message: {\r\n                      class: \"\"\r\n                  }\r\n              },\r\n              error: {\r\n                  class: \"error\",\r\n                  message: {\r\n                      class: \"ui basic red pointing prompt label\",\r\n                  }\r\n              },\r\n              validate: {\r\n                  default: {\r\n                      type: \"\",\r\n                      pattern: \"\",\r\n                      message: \"\",\r\n                      toValidate: function () {\r\n                          return true;\r\n                      }\r\n                  },\r\n                  date: {\r\n                      type: \"regex\",\r\n                      pattern: /((([0][1-9]|[12][\\d])|[3][01])[-/]([0][13578]|[1][02])[-/][1-9]\\d\\d\\d)|((([0][1-9]|[12][\\d])|[3][0])[-/]([0][13456789]|[1][012])[-/][1-9]\\d\\d\\d)|(([0][1-9]|[12][\\d])[-/][0][2][-/][1-9]\\d([02468][048]|[13579][26]))|(([0][1-9]|[12][0-8])[-/][0][2][-/][1-9]\\d\\d\\d)/u,\r\n                      message: \"Data de Nascimento inválida.\"\r\n                  },\r\n                  creditcard: {\r\n                      type: \"regex\",\r\n                      pattern: /\\d{4}-?\\d{4}-?\\d{4}-?\\d{4}-?\\d{3}/u,\r\n                      message: \"Cartão de crédito inválido.\"\r\n                  },\r\n                  cpfCnpj: {\r\n                      type: \"cpfcnpj\",\r\n                      message: \"CPF/CNPJ inválido.\"\r\n                  },\r\n                  email: {\r\n                      type: \"regex\",\r\n                      pattern: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/g,\r\n                      message: \"E-mail inválido. Ex: seuemail@provedor.com\"\r\n                  },\r\n                  empty: {\r\n                      type: \"empty\",\r\n                      message: \"Campo obrigatório.\"\r\n                  },\r\n                  name: {\r\n                      type: \"name\",\r\n                      pattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u,\r\n                      message: \"Preencha com seu nome completo. (Ex: João Silva ou Maria Silva)\"\r\n                  },\r\n                  number: {\r\n                      type: \"regex\",\r\n                      pattern: /^\\d+$/u,\r\n                      message: \"Somente números.\"\r\n                  },\r\n                  phone: {\r\n                      type: \"regex\",\r\n                      pattern: /(^|\\()?\\s*(\\d{2})\\s*(\\s|\\))*(9?\\d{4})(\\s|-)?(\\d{4})($|\\n)/u,\r\n                      message: \"Telefone inválido. (Ex: (16) 3645-9857 ou (16) 98764-5316)\"\r\n                  },\r\n                  select: {\r\n                      type: \"select\",\r\n                      message: \"Escolha uma opção.\"\r\n                  },\r\n                  zipcode: {\r\n                      type: \"zipcode\",\r\n                      message: \"CEP inválido.\",\r\n                      onValidateInputComplete: function () {\r\n                      }\r\n                  }\r\n              },\r\n              onValidateClear: function () {\r\n              },\r\n              onValidateFail: function () {\r\n              },\r\n              onValidateSucess: function () {\r\n              },\r\n              onInputComplete: function () {\r\n              },\r\n              onNext: function () {\r\n              },\r\n              onshowNextField: function () {\r\n              },\r\n              disableEvent: function () {\r\n              },\r\n              onFinishedForm: function (form, fields) {\r\n              },\r\n              onUnFinishedForm: function (form, field) {\r\n              }\r\n          };\r\n\r\n    function JetCheckout(element, options) {\r\n        this.element   = element;\r\n        this.settings  = $.extend({}, defaults, options);\r\n        this._defaults = defaults;\r\n        this._name     = pluginName;\r\n        this.init();\r\n    }\r\n\r\n    $.extend(JetCheckout.prototype, {\r\n        init: function () {\r\n            let $element      = $(this.element),\r\n                jet           = this,\r\n                groupSelector = this.settings.fieldGroupSelector,\r\n                fieldSelector = this.settings.fieldSelector;\r\n\r\n            this.tabIndex = 0;\r\n\r\n            $element.find(`${groupSelector}:not([data-jet-active=\"true\"]), ${fieldSelector}:not([data-jet-active=\"true\"]), [data-jet-active=\"false\"]`)\r\n                .hide()\r\n                .find(\"input\")\r\n                .each(function () {\r\n                    $(this).attr(\"disabled\", true);\r\n                });\r\n\r\n            $element.show();\r\n\r\n            $element.find(groupSelector).each(function () {\r\n                $(this).attr('data-jet-field-group', true);\r\n                $.fn[pluginName].setId($(this));\r\n            });\r\n\r\n            $element.find(fieldSelector).each(function () {\r\n                $.fn[pluginName].setId($(this));\r\n\r\n                $(this).attr(\"data-jet-field\", true);\r\n                let $this         = $(this),\r\n                    $input        = $(this).find(\"input:first\"),\r\n                    keypressDelay = (function () {\r\n                        let timer = 0;\r\n                        return function (callback, ms) {\r\n                            clearTimeout(timer);\r\n                            timer = setTimeout(callback, ms);\r\n                        };\r\n                    })();\r\n\r\n                $input.keypress((e) => {\r\n                    let keyCode = e.keyCode || e.which;\r\n                    if (keyCode === 9) {\r\n                        if (!jet.validateField($this)) {\r\n                            e.preventDefault();\r\n                            $input.focus();\r\n                        }\r\n                    }\r\n                    keypressDelay(function () {\r\n                        if (jet.validateField($this)) {\r\n                            jet.settings.onNext.call($this);\r\n                            jet.showNextField($this);\r\n                        }\r\n\r\n                    }, 500);\r\n                });\r\n                $input.on(\"blur change\", () => {\r\n                    jet.settings.onInputComplete.call($this);\r\n                    if (jet.validateField($this)) {\r\n                        jet.settings.onNext.call($this);\r\n                        jet.showNextField($this);\r\n                        if ($(this).attr(\"data-jet-valid\")) {\r\n                            jet.settings.disableEvent($this);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Validate a field based on the fieldSelector and the validate rules.\r\n         * Returns if the field is valid or not.\r\n         * @param (Field)\r\n         * @returns {boolean}\r\n         */\r\n        validateField: function ($field) {\r\n            $field             = $($field);\r\n            let jet            = this,\r\n                regex          = false,\r\n                isValid        = false,\r\n                id             = $field.attr(\"data-jet-checkout-id\"),\r\n                $input         = $field.find(\"input:first\"),\r\n                type           = $input.attr(\"data-jet-validate\"),\r\n                fieldBehaviour = $input.attr(\"data-jet-type\"),\r\n                value          = $input.val(),\r\n                message        = \"\";\r\n            jet.endOfForm();\r\n            if (type === undefined) {\r\n                return true;\r\n            }\r\n\r\n            else {\r\n                for (let key in jet.settings.validate) {\r\n                    if (key === type) {\r\n                        let validateOptions = jet.settings.validate[key];\r\n                        message             = validateOptions.message;\r\n                        if (validateOptions.type === \"cpfcnpj\") {\r\n                            if (fieldBehaviour === \"profileChanger\" && cleanString(value).length === 0) {\r\n                                jet.changeProfile(\"clear\");\r\n                                jet.fieldClear($field, id);\r\n                                return false;\r\n                            }\r\n                            if (cleanString(value).length === 11) {\r\n                                jet.changeProfile(\"pf\");\r\n                                regex = $.fn[pluginName].validateCPF(value);\r\n                            }\r\n                            else if (cleanString(value).length === 14) {\r\n                                jet.changeProfile(\"pj\");\r\n                                regex = $.fn[pluginName].validateCNPJ(value);\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"empty\") {\r\n                            if (value !== \"\") {\r\n                                regex = true;\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"function\") {\r\n                            regex = validateOptions.toValidate();\r\n                        }\r\n                        else if (validateOptions.type === \"name\") {\r\n                           if (/^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\\s([A-zÀ-ÿ']\\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$/g.test(value)){\r\n                                regex = validateOptions.pattern.test(value);\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"regex\") {\r\n                            regex = validateOptions.pattern.test(value);\r\n                        }\r\n                        else if (validateOptions.type === \"select\") {\r\n                            $input = $field.find(\"select:first\");\r\n                            type   = $input.attr(\"data-jet-validate\");\r\n                            value  = $input.val();\r\n                            if (!!value) {\r\n                                jet.fieldIsInvalid($field, id);\r\n                                return false;\r\n                            }\r\n                            else {\r\n                                jet.fieldIsValid($field, id);\r\n                                return true;\r\n                            }\r\n                        }\r\n                        else if (validateOptions.type === \"zipcode\") {\r\n                            let validacep = /^[0-9]{8}$/;\r\n                            value         = cleanString(value);\r\n                            if (value === \"\" || value.length >= 1 && !validacep.test(value)) {\r\n                                regex = false;\r\n                            }\r\n                            else if (validacep.test(value)) {\r\n                                regex = true;\r\n                                validateOptions.onValidateInputComplete();\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        if (regex) {\r\n                            isValid = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isValid) {\r\n                jet.fieldIsValid($field, id);\r\n                return true;\r\n            }\r\n            else {\r\n                jet.fieldIsInvalid($field, id, message);\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * change the field to a valid state\r\n         * @param $field\r\n         * @param id\r\n         */\r\n        fieldClear: function ($field, id) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            $field.attr(\"data-jet-valid\", true).removeClass(jet.settings.error.class).removeClass(jet.settings.success.class);\r\n            $.fn[pluginName].showErrorMsg({remove: true, id: id});\r\n            jet.settings.onValidateClear.call($field);\r\n        },\r\n        /**\r\n         * change the field to a valid state\r\n         * @param $field\r\n         * @param id\r\n         */\r\n        fieldIsValid: function ($field, id) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n\r\n            $field.attr(\"data-jet-valid\", true).removeClass(jet.settings.error.class).addClass(jet.settings.success.class);\r\n            $.fn[pluginName].showErrorMsg({remove: true, id: id});\r\n            jet.settings.onValidateSucess.call($field);\r\n        },\r\n        /**\r\n         * Change the field to a invalid state\r\n         * @param $field\r\n         * @param id\r\n         * @param message\r\n         */\r\n        fieldIsInvalid: function ($field, id, message) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            $field.attr(\"data-jet-valid\", false).removeClass(jet.settings.success.class).addClass(jet.settings.error.class);\r\n            $.fn[pluginName].showErrorMsg({message: message, id: id, class: jet.settings.error.message.class});\r\n\r\n            jet.settings.onValidateFail.call($field);\r\n        },\r\n        /**\r\n         * Change the current active profile.\r\n         * Set by the key of the profiles.selector rules\r\n         *\r\n         * @param profile\r\n         */\r\n        changeProfile: function (profile) {\r\n            let jet = this;\r\n            if (profile === \"clear\") {\r\n                for (let key in jet.settings.profile.selector) {\r\n                    $(`${jet.settings.profile.selector[key]}`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            for (let key in jet.settings.profile.selector) {\r\n                if (profile === \"clear\") {\r\n                    $(`${jet.settings.profile.selector[key]}`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n                }\r\n                if (key === profile) {\r\n                    jet.settings.profile.active = jet.settings.profile.selector[key];\r\n                    $(`${jet.settings.profile.active}`).find(\"input:first\").val(\"\").attr(\"disabled\", false);\r\n                }\r\n                $(`${jet.settings.profile.selector[key]}:not(${jet.settings.profile.active})`).hide().find(\"input:first\").val(\"\").attr(\"disabled\", true);\r\n            }\r\n        },\r\n        /**\r\n         * Check if the field belongs to a valid profile selector.\r\n         * @param (field)\r\n         * @returns {boolean}\r\n         */\r\n        belongsToProfileSelector: function ($field) {\r\n            $field  = $($field);\r\n            let jet = this;\r\n            for (let key in jet.settings.profile.selector) {\r\n                if ($field.is(jet.settings.profile.selector[key])) return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Show the field and add focus to it if is needed.\r\n         * @param (field)\r\n         */\r\n        showElement: function ($fieldObject, revel = false) {\r\n            $fieldObject = $($fieldObject);\r\n            let jet      = this;\r\n\r\n            $fieldObject\r\n                .attr(\"data-jet-active\", true)\r\n                .fadeIn()\r\n                .focus()\r\n                .find(\"input\")\r\n                .each(function () {\r\n                    $(this).attr(\"disabled\", false);\r\n                });\r\n            if ($fieldObject.is(jet.settings.fieldSelector) && $fieldObject.is(\"visible\")) {\r\n                let index = jet.tabIndex = jet.tabIndex + 1;\r\n                $fieldObject.attr(\"tabindex\", index);\r\n            }\r\n            jet.settings.onshowNextField($fieldObject);\r\n\r\n        },\r\n        formStatus: function () {\r\n            let jet         = this,\r\n                required    = `${jet.settings.fieldSelector}${jet.settings.requiredSelector}`,\r\n                error       = `${jet.settings.error.class}`,\r\n                success     = `${jet.settings.success.class}`,\r\n                $error      = $(`${required}.${error}:visible:not(.${success})`),\r\n                $sucess     = $(`${required}.${success}:visible:not(.${error})`),\r\n                $incomplete = $(`${required}:visible:not(.${success}):not(.${error})`),\r\n                $notError   = $(`${required}:not(.${error}):visible`),\r\n                $notSucess  = $(`${required}:visible:not(.${success})`);\r\n\r\n            return {\r\n                complete: (!!jet.isTheEnd && !$incomplete.length && !$notSucess.hasClass(error) && $notError.hasClass(success)),\r\n                error: ($error.hasClass(error)),\r\n                success: ($notError.hasClass(success) && !$incomplete.length && !$notSucess.hasClass(error)),\r\n                fields: {\r\n                    error: $error,\r\n                    success: $sucess,\r\n                    incomplete: $incomplete\r\n                }\r\n            };\r\n\r\n        },\r\n        endOfForm: function () {\r\n            let jet    = this,\r\n                status = jet.formStatus();\r\n            if (jet.executed) {\r\n                if (status.error) {\r\n                    jet.settings.onUnFinishedForm(jet.element, status.fields);\r\n                }\r\n                if (status.success && status.complete) {\r\n                    jet.settings.onFinishedForm(jet.element, status.fields);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Show the next element of the field.\r\n         * @param (field)\r\n         * @param isGroup {boolean}\r\n         * @returns {boolean}\r\n         */\r\n        showNextField: function ($currentElement, isGroup = false) {\r\n            $currentElement  = $($currentElement);\r\n            let jet          = this,\r\n                $nextElement = $currentElement.next();\r\n\r\n            if (!$currentElement.length) {\r\n                return false;\r\n            }\r\n            if (isGroup) {\r\n                jet.validateShowField($currentElement);\r\n                return false;\r\n            }\r\n            else if (!$nextElement.length) {\r\n                if (!$currentElement.parent().next().length) {\r\n                    if (this.isTheEnd === undefined) {\r\n                        this.isTheEnd = true;\r\n                        jet.executed  = true;\r\n                    }\r\n                    this.endOfForm();\r\n                    return true;\r\n                }\r\n                jet.validateShowField($currentElement.parent().next());\r\n                return false;\r\n            }\r\n            else {\r\n                jet.validateShowField($nextElement);\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * Internal Funcion to check the field.\r\n         * @param $currentElement\r\n         * @returns {boolean}\r\n         */\r\n        validateShowField: function ($currentElement) {\r\n            $currentElement = $($currentElement);\r\n            let jet         = this;\r\n\r\n            if ($currentElement.is(\"form\")) {\r\n                return false;\r\n            }\r\n            else if (!!$currentElement.attr(\"data-jet-revel\") && $currentElement.is(jet.settings.fieldSelector)) {\r\n                jet.showElement($currentElement, true);\r\n                jet.showNextField($currentElement);\r\n                return false;\r\n            }\r\n            else if (!(!!$currentElement.attr(\"data-jet-checkout-id\"))) {\r\n                jet.showElement($currentElement);\r\n                jet.showNextField($currentElement);\r\n                return false;\r\n            }\r\n\r\n            else if (this.belongsToProfileSelector($currentElement)) {\r\n                if ($currentElement.is(jet.settings.profile.active)) {\r\n                    if (!!$currentElement.attr(\"data-jet-field-group\")) {\r\n                        jet.showElement($currentElement);\r\n                        jet.showNextField($currentElement[0].firstElementChild, true);\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        jet.showElement($currentElement);\r\n                        return false;\r\n                    }\r\n                }\r\n                else {\r\n                    jet.showNextField($currentElement);\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            else if (!!$currentElement.attr(\"data-jet-field-group\")) {\r\n                jet.showElement($currentElement);\r\n                jet.showNextField($currentElement[0].firstElementChild, true);\r\n                return false;\r\n            }\r\n\r\n            else {\r\n                jet.showElement($currentElement);\r\n                return false;\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    $.fn[pluginName] = function (options) {\r\n        return this.each(function () {\r\n            if (!$.data(this, \"data-\" + pluginName)) {\r\n                $.data(this, \"data-\" +\r\n                    pluginName, new JetCheckout(this, options));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Make an ID\r\n     * @returns {string}\r\n     */\r\n    $.fn[pluginName].makeId = function () {\r\n        let S4 = () => {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    };\r\n    /**\r\n     * Set an ID to a field.\r\n     * @param (field)\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    $.fn[pluginName].setId = function ($field, id = \"\") {\r\n        $field = $($field);\r\n\r\n        if (id === \"\") {\r\n            id = $.fn[pluginName].makeId();\r\n            $field.attr(\"data-jet-checkout-id\", id);\r\n            return id;\r\n        }\r\n        else {\r\n            $field.attr(\"data-jet-checkout-id\", id);\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * validante brazilian cnpj\r\n     * @param cnpj\r\n     * @returns {boolean}\r\n     */\r\n    $.fn[pluginName].validateCNPJ = function (cnpj) {\r\n        let BLACKLIST          = [\r\n                \"00000000000000\",\r\n                \"11111111111111\",\r\n                \"22222222222222\",\r\n                \"33333333333333\",\r\n                \"44444444444444\",\r\n                \"55555555555555\",\r\n                \"66666666666666\",\r\n                \"77777777777777\",\r\n                \"88888888888888\",\r\n                \"99999999999999\"\r\n            ],\r\n            STRICT_STRIP_REGEX = /[-\\/.]/g,\r\n            LOOSE_STRIP_REGEX  = /[^\\d]/g,\r\n            CNPJ               = {};\r\n\r\n        let verifierDigit = function (numbers) {\r\n            let index   = 2;\r\n            let reverse = numbers.split(\"\").reduce(function (buffer, number) {\r\n                return [parseInt(number, 10)].concat(buffer);\r\n            }, []);\r\n\r\n            let sum = reverse.reduce(function (buffer, number) {\r\n                buffer += number * index;\r\n                index = (index === 9 ? 2 : index + 1);\r\n                return buffer;\r\n            }, 0);\r\n\r\n            let mod = sum % 11;\r\n            return (mod < 2 ? 0 : 11 - mod);\r\n        };\r\n        CNPJ.format       = function (number) {\r\n            return this.strip(number).replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/, \"$1.$2.$3/$4-$5\");\r\n        };\r\n        CNPJ.strip        = function (number, strict) {\r\n            let regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\r\n            return (number || \"\").toString().replace(regex, \"\");\r\n        };\r\n        CNPJ.isValid      = function (number, strict) {\r\n            let stripped = this.strip(number, strict);\r\n            if (!stripped) {\r\n                return false;\r\n            }\r\n            if (stripped.length !== 14) {\r\n                return false;\r\n            }\r\n            if (BLACKLIST.indexOf(stripped) >= 0) {\r\n                return false;\r\n            }\r\n\r\n            let numbers = stripped.substr(0, 12);\r\n            numbers += verifierDigit(numbers);\r\n            numbers += verifierDigit(numbers);\r\n\r\n            return numbers.substr(-2) === stripped.substr(-2);\r\n        };\r\n        return CNPJ.isValid(cnpj);\r\n    };\r\n    /**\r\n     * validate brazilian cpf\r\n     * @param cpf\r\n     * @returns {boolean}\r\n     */\r\n    $.fn[pluginName].validateCPF = function (cpf) {\r\n        // Blacklist common values.\r\n        let BLACKLIST          = [\r\n                \"00000000000\",\r\n                \"11111111111\",\r\n                \"22222222222\",\r\n                \"33333333333\",\r\n                \"44444444444\",\r\n                \"55555555555\",\r\n                \"66666666666\",\r\n                \"77777777777\",\r\n                \"88888888888\",\r\n                \"99999999999\",\r\n                \"12345678909\"\r\n            ],\r\n            STRICT_STRIP_REGEX = /[.-]/g,\r\n            LOOSE_STRIP_REGEX  = /[^\\d]/g,\r\n            CPF                = {};\r\n\r\n        let verifierDigit = function (numbers) {\r\n            numbers = numbers\r\n                .split(\"\")\r\n                .map(function (number) {\r\n                    return parseInt(number, 10);\r\n                })\r\n            ;\r\n\r\n            let modulus = numbers.length + 1;\r\n\r\n            let multiplied = numbers.map(function (number, index) {\r\n                return number * (modulus - index);\r\n            });\r\n\r\n            let mod = multiplied.reduce(function (buffer, number) {\r\n                    return buffer + number;\r\n                }) % 11;\r\n\r\n            return (mod < 2 ? 0 : 11 - mod);\r\n        };\r\n        CPF.strip         = function (number, strict) {\r\n            let regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\r\n            return (number || \"\").toString().replace(regex, \"\");\r\n        };\r\n        CPF.isValid       = function (number, strict) {\r\n            let stripped = this.strip(number, strict);\r\n            if (!stripped) {\r\n                return false;\r\n            }\r\n            if (stripped.length !== 11) {\r\n                return false;\r\n            }\r\n            if (BLACKLIST.indexOf(stripped) >= 0) {\r\n                return false;\r\n            }\r\n\r\n            let numbers = stripped.substr(0, 9);\r\n            numbers += verifierDigit(numbers);\r\n            numbers += verifierDigit(numbers);\r\n\r\n            return numbers.substr(-2) === stripped.substr(-2);\r\n        };\r\n\r\n        return CPF.isValid(cpf);\r\n    };\r\n    /**\r\n     * Show the error message based on the config.\r\n     *\r\n     * @param params{\r\n         * id: (data-jet-checkout-id of the element it will be appended the message)\r\n         * class: class of the message that will be added\r\n         * message: string of the message,\r\n         * remove: {boolean} true: remove the message\r\n         * }\r\n     */\r\n    $.fn[pluginName].showErrorMsg = function (params) {\r\n        let $field = $(`[data-jet-checkout-id=\"${params.id}\"]`);\r\n        let html   = `<div class=\"${params.class}\" data-error-for=\"${params.id}\">${params.message}</div>`;\r\n\r\n        if (params.remove === true) {\r\n            $(`div[data-error-for=\"${params.id}\"]`).remove();\r\n        }\r\n        else {\r\n            if ($field.find(`div[data-error-for=\"${params.id}\"]`).length <= 0) {\r\n                $field.append(html);\r\n            }\r\n        }\r\n    };\r\n\r\n})(jQuery, window, document);"]}